Определение:
Сортировка вставками — это алгоритм сортировки, который строит окончательный отсортированный массив по одному элементу за раз, последовательно вставляя каждый следующий элемент в правильную позицию уже отсортированной части массива.
ОБЩИЙ ПРИНЦИП РАБОТЫ СОРТИРОВКИ ВСТАВКАМИ
ОСНОВНАЯ ИДЕЯ
Алгоритм работает как сортировка карт в руке: вы берете по одной карте из неотсортированной стопки и вставляете её в правильное место в отсортированной части.
КАК ЭТО РАБОТЕТЬ ПОШАГОВО
ПРОЦЕСС:
ДЕЛИМ МАССИВ на две части:

✅ Отсортированная (слева)

❌ Неотсортированная (справа)

НАЧАЛЬНОЕ СОСТОЯНИЕ:
Первый элемент считается отсортированным
Все остальные - неотсортированные
ДЛЯ КАЖДОГО ЭЛЕМЕНТА из неотсортированной части:
Берём элемент
Ищем ему место в отсортированной части
Сдвигаем большие элементы вправо
Вставляем элемент на найденное место

ОСНОВНОЙ ПРИНЦИП:
"Берём элемент из неотсортированной части, находим ему правильное место в отсортированной части, сдвигаем элементы чтобы освободить место, вставляем"

ГЛАВНОЕ ПРАВИЛО
"На каждой итерации отсортированная часть увеличивается на один элемент, а неотсортированная уменьшается на один элемент"
Алгоритм продолжается до тех пор, пока все элементы не окажутся в отсортированной части.

ВРЕМЕННАЯ СЛОЖНОСТЬ СОРТИРОВКИ ВСТАВКАМИ


**ЛУЧШИЙ СЛУЧАЙ:** O(n)
**СРЕДНИЙ СЛУЧАЙ:** O(n²)
**ХУДШИЙ СЛУЧАЙ:** O(n²)

### 1. **ЛУЧШИЙ СЛУЧАЙ - O(n)*
**Когда возникает:** Массив уже отсортирован [1, 2, 3, 4, 5]
**Что происходит:**
- Для каждого элемента нужно всего 1 сравнение
- Никаких сдвигов не происходит
- Просто проверяем, что элемент уже на своём месте
**Количество операций:**
- (n-1) сравнений
- 0 сдвигов
- **Итого: O(n)**

### 2. **ХУДШИЙ СЛУЧАЙ - O(n²)**
**Когда возникает:** Массив отсортирован в обратном порядке [5, 4, 3, 2, 1]
**Что происходит:**
- Каждый новый элемент нужно вставлять в самое начало
- Приходится сдвигать все предыдущие элементы
**Количество операций для n элементов:**
- **1-й элемент:** 0 операций (уже "отсортирован")
- **2-й элемент:** 1 сравнение + 1 сдвиг
- **3-й элемент:** 2 сравнения + 2 сдвига
- **4-й элемент:** 3 сравнения + 3 сдвига
- **...**
- **n-й элемент:** (n-1) сравнений + (n-1) сдвигов
**Общее количество операций:**
```
0 + 1 + 2 + 3 + ... + (n-1) = n(n-1)/2 ≈ n²/2
```
**Итого: O(n²)**

### 3. **СРЕДНИЙ СЛУЧАЙ - O(n²)**
**Когда возникает:** Случайный порядок элементов
**Статистически:**
- В среднем каждый элемент нужно сдвигать на половину отсортированной части
- Количество операций ≈ n²/4
- **Общая сложность остается O(n²)**

## ВЫВОД
**Сортировка вставками имеет O(n²) в худшем случае, потому что количество операций растет как сумма арифметической прогрессии, но O(n) в лучшем случае для уже отсортированных данных.**
**Это делает её эффективной для маленьких или почти отсортированных массивов, но неэффективной для больших случайных данных.**
