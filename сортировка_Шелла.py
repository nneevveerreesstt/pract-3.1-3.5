def shell_sort(arr):
    """
    –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –®–µ–ª–ª–∞ - —É–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≤—Å—Ç–∞–≤–∫–∞–º–∏
    """
    # –ü–æ–ª—É—á–∞–µ–º –¥–ª–∏–Ω—É –º–∞—Å—Å–∏–≤–∞
    n = len(arr)
    
    # –í—ã—á–∏—Å–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª (—à–∞–≥) –∏—Å–ø–æ–ª—å–∑—É—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ö–Ω—É—Ç–∞
    # –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –Ω–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ö–Ω—É—Ç–∞
    # —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–æ–π –∏–∑ –Ω–∞–∏–±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö: (3^k - 1) / 2
    gap = 1
    # –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –Ω–∞—á–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –º–µ–Ω—å—à–µ n/3
    while gap < n // 3:
        gap = gap * 3 + 1  # –§–æ—Ä–º—É–ª–∞ –ö–Ω—É—Ç–∞: 1, 4, 13, 40, 121, ...
    
    # –ù–∞—á–∏–Ω–∞–µ–º —Å –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –∏ —É–º–µ–Ω—å—à–∞–µ–º –µ–≥–æ –¥–æ 1
    while gap > 0:
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –≤—Å—Ç–∞–≤–∫–∞–º–∏ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ gap
        # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º, –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ–∑–∏—Ü–∏–∏ gap
        for i in range(gap, n):
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏
            temp = arr[i]
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            j = i
            
            # –°–¥–≤–∏–≥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ temp, –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ —Å —à–∞–≥–æ–º gap
            # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ gap
            while j >= gap and arr[j - gap] > temp:
                # –°–¥–≤–∏–≥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤–ø—Ä–∞–≤–æ –Ω–∞ gap –ø–æ–∑–∏—Ü–∏–π
                arr[j] = arr[j - gap]
                # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É —Å —à–∞–≥–æ–º gap
                j -= gap
            
            # –í—Å—Ç–∞–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ –Ω–∞–π–¥–µ–Ω–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
            arr[j] = temp
        
        # –£–º–µ–Ω—å—à–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
        # –ü–æ —Ñ–æ—Ä–º—É–ª–µ –ö–Ω—É—Ç–∞: (gap - 1) // 3
        gap = (gap - 1) // 3
    
    return arr


def shell_sort_visual(arr):
    """
    –í–µ—Ä—Å–∏—è —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    """
    n = len(arr)
    print(f"–ù–∞—á–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤: {arr}")
    print(f"–î–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞: {n}")
    print("=" * 50)
    
    # –í—ã—á–∏—Å–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ö–Ω—É—Ç–∞
    gap = 1
    while gap < n // 3:
        gap = gap * 3 + 1
    
    iteration = 1
    while gap > 0:
        print(f"\nüéØ –ò–¢–ï–†–ê–¶–ò–Ø {iteration}: –∏–Ω—Ç–µ—Ä–≤–∞–ª gap = {gap}")
        print(f"–¢–µ–∫—É—â–∏–π –º–∞—Å—Å–∏–≤: {arr}")
        
        for i in range(gap, n):
            temp = arr[i]
            j = i
            
            print(f"  –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç arr[{i}] = {temp}")
            
            comparisons = 0
            shifts = 0
            
            while j >= gap and arr[j - gap] > temp:
                comparisons += 1
                shifts += 1
                print(f"    –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º arr[{j - gap}] = {arr[j - gap]} > {temp}")
                print(f"    –°–¥–≤–∏–≥–∞–µ–º arr[{j - gap}] -> arr[{j}]")
                
                arr[j] = arr[j - gap]
                j -= gap
            
            if comparisons > 0:
                print(f"    –í—Å—Ç–∞–≤–ª—è–µ–º {temp} –Ω–∞ –ø–æ–∑–∏—Ü–∏—é {j}")
            else:
                print(f"    –≠–ª–µ–º–µ–Ω—Ç {temp} —É–∂–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏")
            
            arr[j] = temp
            print(f"    –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {arr}")
        
        # –£–º–µ–Ω—å—à–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª
        gap = (gap - 1) // 3
        iteration += 1
    
    print("=" * 50)
    print(f"–§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {arr}")
    return arr


def shell_sort_simple(arr):
    """
    –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –®–µ–ª–ª–∞ (n/2, n/4, ..., 1)
    """
    n = len(arr)
    
    # –ù–∞—á–∏–Ω–∞–µ–º —Å –±–æ–ª—å—à–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –∏ —É–º–µ–Ω—å—à–∞–µ–º –µ–≥–æ
    gap = n // 2
    
    while gap > 0:
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –≤—Å—Ç–∞–≤–∫–∞–º–∏ —Å —Ç–µ–∫—É—â–∏–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
        for i in range(gap, n):
            temp = arr[i]
            j = i
            
            # –°–¥–≤–∏–≥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ temp
            while j >= gap and arr[j - gap] > temp:
                arr[j] = arr[j - gap]
                j -= gap
            
            # –í—Å—Ç–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
            arr[j] = temp
        
        # –£–º–µ–Ω—å—à–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤–¥–≤–æ–µ
        gap //= 2
    
    return arr


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
def test_shell_sort():
    """
    –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –®–µ–ª–ª–∞
    """
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–û–†–¢–ò–†–û–í–ö–ò –®–ï–õ–õ–ê")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π —Å–ª—É—á–∞–π
    arr1 = [64, 34, 25, 12, 22, 11, 90]
    print("–¢–µ—Å—Ç 1:")
    print(f"–ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤: {arr1}")
    result1 = shell_sort(arr1.copy())
    print(f"–û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: {result1}")
    print()
    
    # –¢–µ—Å—Ç 2: –£–∂–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤
    arr2 = [1, 2, 3, 4, 5, 6, 7]
    print("–¢–µ—Å—Ç 2 (—É–∂–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π):")
    print(f"–ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤: {arr2}")
    result2 = shell_sort(arr2.copy())
    print(f"–ü–æ—Å–ª–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏: {result2}")
    print()
    
    # –¢–µ—Å—Ç 3: –û–±—Ä–∞—Ç–Ω–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤
    arr3 = [7, 6, 5, 4, 3, 2, 1]
    print("–¢–µ—Å—Ç 3 (–æ–±—Ä–∞—Ç–Ω–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π):")
    print(f"–ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤: {arr3}")
    result3 = shell_sort(arr3.copy())
    print(f"–û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: {result3}")
    print()
    
    # –¢–µ—Å—Ç 4: –ú–∞—Å—Å–∏–≤ —Å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º–∏—Å—è —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
    arr4 = [3, 7, 3, 1, 7, 2, 1, 3]
    print("–¢–µ—Å—Ç 4 (—Å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è–º–∏):")
    print(f"–ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤: {arr4}")
    result4 = shell_sort(arr4.copy())
    print(f"–û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: {result4}")
    print()
    
    # –¢–µ—Å—Ç 5: –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
    arr5 = [8, 3, 6, 1, 9, 2, 5, 4]
    print("–¢–ï–°–¢ –° –í–ò–ó–£–ê–õ–ò–ó–ê–¶–ò–ï–ô:")
    print("=" * 50)
    shell_sort_visual(arr5.copy())


# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –æ–±—ã—á–Ω–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π –≤—Å—Ç–∞–≤–∫–∞–º–∏
def insertion_sort_comparison(arr):
    """
    –û–±—ã—á–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –≤—Å—Ç–∞–≤–∫–∞–º–∏ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    """
    n = len(arr)
    for i in range(1, n):
        key = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > key:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    test_shell_sort()
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–Ω–∏—Ü—ã –º–µ–∂–¥—É –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è–º–∏
    print("\n" + "=" * 60)
    print("–°–†–ê–í–ù–ï–ù–ò–ï –ü–û–°–õ–ï–î–û–í–ê–¢–ï–õ–¨–ù–û–°–¢–ï–ô –ò–ù–¢–ï–†–í–ê–õ–û–í")
    print("=" * 60)
    
    test_arr = [5, 2, 8, 1, 9, 3, 7, 4, 6]
    
    print("–ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤:", test_arr)
    print()
    
    result_shell = shell_sort_simple(test_arr.copy())
    print("–° –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –®–µ–ª–ª–∞ (n/2, n/4, ...):", result_shell)
    
    result_knuth = shell_sort(test_arr.copy())
    print("–° –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –ö–Ω—É—Ç–∞ (1, 4, 13, ...):", result_knuth)
    
    result_insertion = insertion_sort_comparison(test_arr.copy())
    print("–û–±—ã—á–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –≤—Å—Ç–∞–≤–∫–∞–º–∏:", result_insertion)