public class SelectionSort {
    
    /**
     * Метод для сортировки массива целых чисел алгоритмом выбора
     * @param arr - массив для сортировки
     */
    public static void selectionSort(int[] arr) {
        // Получаем длину массива для удобства
        int n = arr.length;
        
        // Внешний цикл: проходим по всем элементам массива, кроме последнего
        // После каждой итерации i-й элемент становится на свое окончательное место
        for (int i = 0; i < n - 1; i++) {
            // Предполагаем, что минимальный элемент находится на текущей позиции i
            int minIndex = i;
            
            // Внутренний цикл: ищем минимальный элемент в оставшейся части массива
            // Начинаем с i+1, так как элементы до i уже отсортированы
            for (int j = i + 1; j < n; j++) {
                // Если находим элемент меньше текущего минимального
                if (arr[j] < arr[minIndex]) {
                    // Обновляем индекс минимального элемента
                    minIndex = j;
                }
            }
            
            // После завершения внутреннего цикла нашли минимальный элемент
            // в неотсортированной части массива
            
            // Меняем местами найденный минимальный элемент с текущим элементом i
            // Только если минимальный элемент не находится на своей позиции
            if (minIndex != i) {
                // Временная переменная для хранения значения arr[i]
                int temp = arr[i];
                // Перемещаем минимальный элемент на позицию i
                arr[i] = arr[minIndex];
                // Перемещаем бывший элемент i на позицию минимального элемента
                arr[minIndex] = temp;
            }
            
            // На этом этапе элемент arr[i] находится на своем окончательном месте
            // и больше не будет перемещаться
        }
    }
    
    /**
     * Вспомогательный метод для вывода массива на экран
     * @param arr - массив для вывода
     */
    public static void printArray(int[] arr) {
        // Проходим по всем элементам массива
        for (int i = 0; i < arr.length; i++) {
            // Выводим элемент с пробелом после него
            System.out.print(arr[i] + " ");
        }
        // Переходим на новую строку после вывода всего массива
        System.out.println();
    }
    
    /**
     * Главный метод для демонстрации работы алгоритма
     */
    public static void main(String[] args) {
        // Создаем тестовый массив для сортировки
        int[] array = {64, 25, 12, 22, 11, 5, 89, 3};
        
        // Выводим исходный массив
        System.out.println("Исходный массив:");
        printArray(array);
        
        // Вызываем метод сортировки выбором
        selectionSort(array);
        
        // Выводим отсортированный массив
        System.out.println("Отсортированный массив:");
        printArray(array);
        
        // Дополнительный пример с другим массивом
        System.out.println("\nДополнительный пример:");
        
        int[] array2 = {45, -2, 33, 0, 17, -8, 92, 4};
        System.out.println("Исходный массив 2:");
        printArray(array2);
        
        selectionSort(array2);
        System.out.println("Отсортированный массив 2:");
        printArray(array2);
    }
}
