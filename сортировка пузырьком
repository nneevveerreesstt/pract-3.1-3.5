Определение:
Сортировка пузырьком — это простой алгоритм сортировки, который многократно проходит по массиву, сравнивает соседние элементы и меняет их местами, если они находятся в неправильном порядке, пока массив не будет полностью отсортирован.

ОБЩИЙ ПРИНЦИП РАБОТЫ СОРТИРОВКИ ПУЗЫРЬКОМ
ОСНОВНАЯ ИДЕЯ
Сортировка пузырьком работает по принципу "всплытия" самых больших элементов - алгоритм многократно проходит по массиву, сравнивая соседние элементы и меняя их местами, если они стоят в неправильном порядке.

КЛЮЧЕВЫЕ ЭТАПЫ
1. МНОГОКРАТНЫЕ ПРОХОДЫ ПО МАССИВУ
python
for i in range(n):
Выполняется n проходов по массиву

После каждого прохода самый большой элемент "всплывает" в конец

2. СРАВНЕНИЕ СОСЕДНИХ ЭЛЕМЕНТОВ
python
for j in range(0, n - i - 1):
    if arr[j] > arr[j + 1]:
        arr[j], arr[j + 1] = arr[j + 1], arr[j]
На каждом проходе сравниваются все соседние пары

Если порядок неправильный - элементы меняются местами

Область сравнения уменьшается с каждым проходом

3. ОПТИМИЗАЦИЯ - ДОСРОЧНОЕ ЗАВЕРШЕНИЕ
python
if not swapped:
    break
Если на проходе не было ни одного обмена - массив уже отсортирован

Позволяет завершить работу раньше для частично отсортированных массивов

ВРЕМЕННАЯ СЛОЖНОСТЬ СОРТИРОВКИ ПУЗЫРЬКОМ

O(n²)
Когда возникает: Массив отсортирован в обратном порядке [5, 4, 3, 2, 1]
Количество операций:
Проход 1: (n-1) сравнений + (n-1) обменов
Проход 2: (n-2) сравнений + (n-2) обменов
Проход 3: (n-3) сравнений + (n-3) обменов
...
Проход n-1: 1 сравнение + 1 обмен

Общее количество операций:
Сравнения: (n-1) + (n-2) + ... + 1 = n(n-1)/2 ≈ n²/2
Обмены: тоже n(n-1)/2 ≈ n²/2
Итого: O(n²) + O(n²) = O(n²)
